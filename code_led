// DefiniÃ§Ã£o dos pinos dos LEDs RGB
const int greenLEDPin = 9;
const int redLEDPin   = 11;
const int blueLEDPin  = 10;

// DefiniÃ§Ã£o dos pinos dos sensores (entrada analÃ³gica)
const int redSensorPin   = A0;
const int greenSensorPin = A1;
const int blueSensorPin  = A2;

// VariÃ¡veis para armazenar valores dos LEDs (0â€“255)
int redValue   = 0;
int greenValue = 0;
int blueValue  = 0;

// VariÃ¡veis para armazenar valores lidos dos sensores (0â€“1023)
int redSensorValue   = 0;
int greenSensorValue = 0;
int blueSensorValue  = 0;

void setup() {
  // Inicializa comunicaÃ§Ã£o serial (para depuraÃ§Ã£o)
  Serial.begin(9600);

  // Define os pinos dos LEDs como saÃ­da
  pinMode(greenLEDPin, OUTPUT);
  pinMode(redLEDPin, OUTPUT);
  pinMode(blueLEDPin, OUTPUT);
}

void loop() {
  // LÃª os sensores de cor (valores de 0â€“1023)
  redSensorValue = analogRead(redSensorPin);
  delay(5); // pequena pausa para estabilizar a leitura
  
  greenSensorValue = analogRead(greenSensorPin);
  delay(5);
  
  blueSensorValue = analogRead(blueSensorPin);

  // Mostra os valores brutos dos sensores no Serial Monitor
  Serial.print("Raw Sensor Values \t Red: ");
  Serial.print(redSensorValue);
  Serial.print("\t Green: ");
  Serial.print(greenSensorValue);
  Serial.print("\t Blue: ");
  Serial.println(blueSensorValue);

  // Converte os valores (0â€“1023) para faixa de 0â€“255
  redValue   = redSensorValue / 4;
  greenValue = greenSensorValue / 4;
  blueValue  = blueSensorValue / 4;

  // Mostra os valores mapeados no Serial Monitor
  Serial.print("Mapped Sensor Values \t Red: ");
  Serial.print(redValue);
  Serial.print("\t Green: ");
  Serial.print(greenValue);
  Serial.print("\t Blue: ");
  Serial.println(blueValue);

  // Envia os valores convertidos para os LEDs RGB
  analogWrite(redLEDPin, redValue);
  analogWrite(greenLEDPin, greenValue);
  analogWrite(blueLEDPin, blueValue);
}
ExplicaÃ§Ã£o parte por parte
ðŸ”¹ DefiniÃ§Ãµes de pinos (const int ...)
Aqui vocÃª define quais pinos do Arduino estÃ£o conectados aos LEDs RGB e aos sensores analÃ³gicos de cor (pinos A0, A1, A2).

ðŸ”¹ VariÃ¡veis de armazenamento (int ...)
redSensorValue, greenSensorValue, blueSensorValue: armazenam os valores brutos lidos dos sensores (0â€“1023).

redValue, greenValue, blueValue: armazenam os valores convertidos para a escala de brilho do LED (0â€“255).

ðŸ”¹ FunÃ§Ã£o setup()
Serial.begin(9600): habilita comunicaÃ§Ã£o serial a 9600 bps (velocidade usada pelo monitor serial).

pinMode(..., OUTPUT): define que os pinos dos LEDs serÃ£o de saÃ­da (mandar corrente).

ðŸ”¹ FunÃ§Ã£o loop()
Aqui acontece o ciclo infinito de leitura dos sensores e controle dos LEDs.

Leitura dos sensores

analogRead(...) lÃª valores de 0 a 1023 (tensÃ£o analÃ³gica de 0â€“5V).

Pequenos delay(5) ajudam a estabilizar a leitura.

ImpressÃ£o dos valores brutos

O Serial.print(...) mostra no monitor serial os valores capturados pelos sensores.

Mapeamento dos valores

Como o PWM do Arduino aceita valores de 0 a 255, divide-se por 4 (valor/4).

Isso converte o intervalo de 1023 â†’ 255.

ImpressÃ£o dos valores mapeados

Novamente mostra no monitor os valores jÃ¡ ajustados.

Controle dos LEDs

analogWrite(...) envia o valor de brilho para cada cor do LED RGB.

Dessa forma, a cor do LED vai depender diretamente dos valores lidos dos sensores.

ðŸ‘‰ Resumindo:
O cÃ³digo lÃª trÃªs sensores de cor (vermelho, verde e azul) â†’ imprime os valores no Serial Monitor â†’ converte os valores para faixa do LED RGB â†’ ajusta a cor do LED proporcionalmente.

// 1) RGB + sensores
const int greenLEDPin = 9;
const int redLEDPin   = 11;
const int blueLEDPin  = 10;

const int redSensorPin   = A0;
const int greenSensorPin = A1;
const int blueSensorPin  = A2;

int redValue   = 0;
int greenValue = 0;
int blueValue  = 0;

int redSensorValue   = 0;
int greenSensorValue = 0;
int blueSensorValue  = 0;

void setup() {
  Serial.begin(9600);
  pinMode(greenLEDPin, OUTPUT);
  pinMode(redLEDPin, OUTPUT);
  pinMode(blueLEDPin, OUTPUT);
}

void loop() {
  redSensorValue = analogRead(redSensorPin);
  delay(5);
  greenSensorValue = analogRead(greenSensorPin);
  delay(5);
  blueSensorValue = analogRead(blueSensorPin);

  Serial.print("Raw Sensor Values \t Red: ");
  Serial.print(redSensorValue);
  Serial.print("\t Green: ");
  Serial.print(greenSensorValue);
  Serial.print("\t Blue: ");
  Serial.println(blueSensorValue);

  redValue   = redSensorValue / 4;
  greenValue = greenSensorValue / 4;
  blueValue  = blueSensorValue / 4;

  Serial.print("Mapped Sensor Values \t Red: ");
  Serial.print(redValue);
  Serial.print("\t Green: ");
  Serial.print(greenValue);
  Serial.print("\t Blue: ");
  Serial.println(blueValue);

  analogWrite(redLEDPin, redValue);
  analogWrite(greenLEDPin, greenValue);
  analogWrite(blueLEDPin, blueValue);
}
