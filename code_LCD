#include <LiquidCrystal.h>

// Pinos do LCD 16x2 no modo de 4 bits
const int RS = 12;
const int EN = 11;
const int D4 = 5;
const int D5 = 4;
const int D6 = 3;
const int D7 = 2;

// Cria o objeto do LCD: (RS, EN, D4, D5, D6, D7)
LiquidCrystal lcd(RS, EN, D4, D5, D6, D7);

void setup() {
  lcd.begin(16, 2);                 // LCD 16 colunas x 2 linhas
  lcd.print("Curso de Arduino");    // escreve na 1ª linha (coluna 0)
  lcd.setCursor(1, 1);              // coluna 1, linha 1 (2ª linha)
  lcd.print("DEFIJI - UNIR");
}

void loop() {
  // vazio por enquanto
}
O que cada parte faz
#include <LiquidCrystal.h>
Importa a biblioteca que controla LCDs baseados no controlador HD44780 (bem comum em 16x2).

Constantes RS/EN/D4..D7
Definem quais pinos do Arduino estão ligados às entradas do LCD no modo 4 bits:

RS (Register Select): seleciona comando ou dados.

EN (Enable): pulso de habilitação para “travar” o valor.

D4–D7: linhas de dados (usando só 4 em vez de 8).

LiquidCrystal lcd(...)
Cria o objeto que sabe conversar com o LCD usando os pinos indicados.

lcd.begin(16, 2)
Inicializa o display informando que ele tem 16 colunas e 2 linhas.

lcd.print("Curso de Arduino")
Escreve a string na posição atual do cursor (início da 1ª linha por padrão).

lcd.setCursor(1, 1)
Move o cursor para coluna 1 (segunda coluna, já que começa em 0) e linha 1 (segunda linha, pois linhas são 0 e 1).

lcd.print("DEFIJI - UNIR")
Escreve o texto nessa posição. Como começou na coluna 1, fica um pequeno recuo à esquerda.

loop() vazio
Nada dinâmico acontece após a mensagem inicial; o texto fica estático na tela.

Dicas rápidas (opcional)
Ligação básica do LCD 16x2 (sem I2C):

VSS → GND, VDD → +5V, RW → GND (só escrita),

RS → 12, EN → 11, D4 → 5, D5 → 4, D6 → 3, D7 → 2,

V0 (contraste) → meio de um potenciômetro 10k (outros dois terminais em 5V e GND),

Backlight: LEDA/Anodo → +5V (muitas placas já têm resistor), LEDK/Cátodo → GND.

Para começar a segunda linha sem recuo, use lcd.setCursor(0, 1);.

Quer algo dinâmico? No loop() dá pra exibir contagem, hora, sensor etc., usando lcd.clear() ou apenas reposicionando e sobrescrevendo.


// 4) LCD 16x2 (LiquidCrystal)
#include <LiquidCrystal.h>

const int RS = 12;
const int EN = 11;
const int D4 = 5;
const int D5 = 4;
const int D6 = 3;
const int D7 = 2;

LiquidCrystal lcd(RS, EN, D4, D5, D6, D7);

void setup() {
  lcd.begin(16, 2);
  lcd.print("Curso de Arduino");
  lcd.setCursor(1, 1);
  lcd.print("DEFIJI - UNIR");
}

void loop() {
}
